version: 2.1
defaults: &defaults
  docker:
    - image: cimg/base:stable-20.04
      auth:
        username: mydockerhub-user
        password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    - image: circleci/mysql:8.0.23
      auth:
        username: mydockerhub-user
        password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
      entrypoint: ['docker-entrypoint.sh', '--default-authentication-plugin=mysql_native_password']
      environment:
        MYSQL_ROOT_PASSWORD: rootpw
        MYSQL_ROOT_HOST: "%"
        MYSQL_DATABASE: test_vardoc
        MYSQL_USER: user
        MYSQL_PASSWORD: passw0rd
commands:
  vardoc-build:
    steps:
      - checkout         
      ## Usefull must have utils.
      - run:
          name: Usefull must have utils
          command: |
            sudo apt -qq update
            sudo apt -qqy upgrade
            sudo apt -yqq install vim links lynx git diffutils htop curl wget p7zip-full unzip zip sed gcc g++ make libfreetype6-dev libaio1 libaio-dev libonig-dev libpng-dev xvfb mysql-client default-mysql-client

      ## Setup Apache2 and PHP7.4
      - run:
          name: Setup Apache2 and PHP7.4
          command: |
            sudo add-apt-repository ppa:ondrej/php -y
            sudo apt update
            sudo apt upgrade
            sudo apt install -yqq apache2 php7.4 libapache2-mod-php7.4 php7.4-mbstring php7.4-mysql php7.4-xml php7.4-cgi php7.4-cli php7.4-common php7.4-curl php7.4-gd php7.4-imap php7.4-intl php7.4-pspell php7.4-sqlite3 php7.4-tidy php7.4-opcache php7.4-json php7.4-bz2 php7.4-readline php7.4-xmlrpc php7.4-enchant php7.4-xsl php7.4-zip php7.4-bcmath php-pear
            sudo a2enmod php7.4
            sudo a2enmod headers rewrite env mime expires ssl
            sudo update-alternatives --set php /usr/bin/php7.4
            echo -e "memory_limit = -1" | sudo tee /etc/php/7.4/apache2/php.ini > /dev/null
            echo -e "max_execution_time = 1200" | sudo tee /etc/php/7.4/apache2/php.ini > /dev/null
            echo -e "error_reporting = E_ALL" | sudo tee /etc/php/7.4/apache2/php.ini > /dev/null
            echo -e "max_input_time = 180" | sudo tee /etc/php/7.4/apache2/php.ini > /dev/null
            echo -e "max_input_vars = 10000" | sudo tee /etc/php/7.4/apache2/php.ini > /dev/null
            echo -e "post_max_size = 64M" | sudo tee /etc/php/7.4/apache2/php.ini > /dev/null
            echo -e "upload_max_filesize = 32M" | sudo tee /etc/php/7.4/apache2/php.ini > /dev/null
            echo -e "max_file_uploads = 40" | sudo tee /etc/php/7.4/apache2/php.ini > /dev/null
            sudo service apache2 restart
  
      ## Waiting for MySQL to be ready.
      - run:
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1

      ## Install composer ~2.1
      - run:
          name: Install composer ~2.1
          command: |
            sudo curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin/ --filename=composer --2;
            composer config -g github-oauth.github.com $GITHUB_TOKEN

      ## Install node js, npm, yarn, and gulp
      - run:
          name: Install node js
          command: |
            curl -sL https://deb.nodesource.com/setup_12.x | sudo bash -
            sudo apt install -y nodejs 
            sudo npm install -g yarn
            sudo npm install gulp-cli -g ;
            sudo npm install gulp -D ;

      ## Install Java.
      - run:
          name: Install Java
          command: |
            sudo apt update
            sudo apt install -y openjdk-11-jre openjdk-11-jre-headless openjdk-11-jdk openjdk-11-jdk-headless

      ## Install/Update Google Chrome browser.
      - run:
          name: Install/Update Google Chrome browser
          command: |
            sudo apt-get install libappindicator1 fonts-liberation libgbm1 libgtk-3-0 xdg-utils
            export CHROME_BIN=/usr/bin/google-chrome
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome-stable_current_amd64.deb
            rm google-chrome-stable_current_amd64.deb

      ## Install/Update Chrome Driver.
      - run:
          name: Install/Update Chrome Driver
          command: |
            CHROME_DRIVER_VERSION=$(wget -qO- chromedriver.storage.googleapis.com/LATEST_RELEASE);
            echo $CHROME_DRIVER_VERSION;
            wget http://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip
            unzip chromedriver_linux64.zip
            sudo chmod +x chromedriver
            sudo mv -f chromedriver /usr/bin/
            rm chromedriver_linux64.zip

      ## List tools versions.
      - run:
          name: List tools versions
          command: |
            php --version
            node --version
            yarn --version
            gulp --version
            java -version
            google-chrome --version
            chromedriver --version
            mysql --version
            composer --version
            php -m
            php -i | grep "Loaded Configuration File"
            php --ini

      ## Build vardoc with the composer.
      - run:
          name: Build vardoc with the composer
          command: |
            if [ -d "/var/www/html/test" ]; then
              sudo rm -rf /var/www/html/test -vvv
            fi
            cd /var/www/
            sudo chmod 775 -R .
            sudo chown www-data:circleci -R .
            mkdir /var/www/html/test
            cd /var/www/html/test/
            sudo chmod 775 .
            sudo chown www-data:circleci .
            composer create-project vardot/vardoc:4.0.x vardoc --stability dev --no-interaction -vvv
            cd /var/www/html/test/vardoc
            composer require drupal/drush_language:~1.0
            cp -r /home/circleci/project /var/www/html/test/vardoc/docroot/profiles/vardoc
            cd /var/www/html/test/vardoc
            sudo rm -rf config configbit css images libraries scripts src tests traslations vardoc.info.yml vardoc.install vardoc.libraries.yml vardoc.profile vardoc.services.yml yarn.lock
            sudo chmod 775 -R .
            sudo chown www-data:circleci -R .
            cp /var/www/html/test/vardoc/docroot/sites/default/default.settings.php /var/www/html/test/vardoc/docroot/sites/default/settings.php
            echo "\$databases['default']['default'] = [
              'database' => 'test_vardoc',
              'username' => 'root',
              'password' => 'rootpw',
              'host' => '127.0.0.1',
              'port' => '3306',
              'driver' => 'mysql',
              'prefix' => '',
              'collation' => 'utf8mb4_general_ci',
            ];" >> /var/www/html/test/vardoc/docroot/sites/default/settings.php
            mkdir /var/www/html/test/vardoc/config
            mkdir /var/www/html/test/vardoc/config/sync
            echo "\$settings['config_sync_directory'] = '../config/sync';" >> /var/www/html/test/vardoc/docroot/sites/default/settings.php
            cd /var/www/html/test/vardoc
            sudo chmod 775 -R .
            sudo chown www-data:circleci -R .

      ## Point vardoc.test at /var/www/html/test/vardoc/docroot
      - run:
          name: Point vardoc.test at /var/www/html/test/vardoc/docroot
          command: |
            sudo a2enmod headers rewrite env mime expires ssl
            sudo cp /home/circleci/project/.circleci/env/vardoc.test.conf /etc/apache2/sites-available/vardoc.test.conf
            sudo a2ensite vardoc.test
            echo 127.0.0.1 vardoc.test | sudo tee -a /etc/hosts
            sudo service apache2 restart

      ## Install vardoc with drush.
      - run:
          name: Install vardoc with drush
          command: |
            mysql -h 127.0.0.1 -uroot -prootpw --execute="DROP DATABASE IF EXISTS test_vardoc;" -vvv
            mysql -h 127.0.0.1 -uroot -prootpw --execute="CREATE DATABASE test_vardoc CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;" -vvv
            cd /var/www/html/test/vardoc/docroot
            ../bin/drush site-install vardoc --yes --site-name='Vardoc Test'   --account-name=webmaster --account-pass=dD.123123ddd --account-mail=webmaster@vardot.com --db-url="mysql://user:passw0rd@127.0.0.1/test_vardoc" varbase_development_tools.varbase_development=true install_configure_form.enable_update_status_emails=NULL -vvv 
            ../bin/drush config:set system.performance css.preprocess 0 --yes
            ../bin/drush config:set system.performance js.preprocess 0 --yes
            ../bin/drush config:set system.logging error_level all --yes
            ../bin/drush cr

      ## Configure and run the virtual display.
      - run:
          name: Configure and run the virtual display.
          command: Xvfb -ac :99 -screen 0 1024x768x24 > /dev/null 2>&1
          background: true

      ## Run selenium standalone server.
      - run:
          name: Run selenium standalone server
          command: |
            if [[ ! -f /home/circleci/selenium-server-standalone-2.53.1.jar ]]; then wget -O /home/circleci/selenium-server-standalone-2.53.1.jar http://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.1.jar; fi
            cd /home/circleci/
            java -jar selenium-server-standalone-2.53.1.jar -port 4445
          background: true

      ## Add testing users.
      - run:
          name: Add testing users.
          command: |
            cd /var/www/html/test/vardoc/docroot/profiles/vardoc/scripts
            bash add-testing-users.sh

      ## Enable the Drush Language Command module and add RTL language
      - run:
          name: Enable the Drush Language Command module and add RTL language
          command: |
            cd /var/www/html/test/vardoc/docroot
            ../bin/drush pm:enable drush_language --yes
            ../bin/drush language-add ar
            ../bin/drush language-info
            ../bin/drush cr

      ## Uninstall Antibot module to let the selenium bot work  
      - run:
          name: Uninstall Antibot module to let the selenium bot work 
          command: |
            cd /var/www/html/test/vardoc/docroot
            ../bin/drush pm:uninstall antibot --yes
            ../bin/drush cr

jobs:
  vardoc-testing-01-website-base-requirements:
    <<: *defaults
    steps:
      - vardoc-build
       ## Automated Functional Acceptance Testing group - 01 website base requirements
      - run:
          name: Automated Functional Acceptance Testing group - 01 website base requirements
          no_output_timeout: 30m
          command: |
            cd /var/www/html/test/vardoc/docroot/profiles/vardoc
            ../../../bin/behat --strict --no-snippets -f pretty -o std tests/features/vardoc/01-website-base-requirements/
  vardoc-testing-02-user-management-03-admin-management:
    <<: *defaults
    steps:
      - vardoc-build
      ## Automated Functional Acceptance Testing group - 02 user management - 03 admin management
      - run:
          name: Automated Functional Acceptance Testing group - 02 user management - 03 admin management
          no_output_timeout: 30m
          command: |
            cd /var/www/html/test/vardoc/docroot/profiles/vardoc
            ../../../bin/behat --strict --no-snippets -f pretty -o std tests/features/vardoc/02-user-management/
            ../../../bin/behat --strict --no-snippets -f pretty -o std tests/features/vardoc/03-admin-management/
  vardoc-testing-04-content-structure:
    <<: *defaults
    steps:
      - vardoc-build
      ## Automated Functional Acceptance Testing group - 04 content structure
      - run:
          name: Automated Functional Acceptance Testing group - 04 content structure
          no_output_timeout: 30m
          command: |
            cd /var/www/html/test/vardoc/docroot/profiles/vardoc
            ../../../bin/behat --strict --no-snippets -f pretty -o std tests/features/vardoc/04-content-structure/
  vardoc-testing-05-content-management:
    <<: *defaults
    steps:
      - vardoc-build
      ## Automated Functional Acceptance Testing group - 05 content-management
      - run:
          name: Automated Functional Acceptance Testing group - 05 content-management
          no_output_timeout: 30m
          command: |
            cd /var/www/html/test/vardoc/docroot/profiles/vardoc
            ../../../bin/behat --strict --no-snippets -f pretty -o std tests/features/vardoc/05-content-management/

workflows:
  version: 2
  vardoc-workflow:
    jobs:
      - vardoc-testing-01-website-base-requirements:
          filters:
            tags:
              only: /^4.0.*/
            branches:
              only: /^4.0.x/
      - vardoc-testing-02-user-management-03-admin-management:
          filters:
            tags:
              only: /^4.0.*/
            branches:
              only: /^4.0.x/
      - vardoc-testing-04-content-structure:
          filters:
            tags:
              only: /^4.*/
            branches:
              only: /^4.0.x/
      - vardoc-testing-05-content-management:
          filters:
            tags:
              only: /^4.0.*/
            branches:
              only: /^4.0.x/